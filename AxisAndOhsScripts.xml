<?xml version="1.0" encoding="utf-8"?>
<ScriptList xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <scripts>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button - ALT Knob Pull</label>
      <script>1 (&gt;K:A32NX.FCU_ALT_PULL) 1 (&gt;H:A320_Neo_CDU_MODE_SELECTED_ALTITUDE)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button - ALT Knob Push</label>
      <script>1 (&gt;K:A32NX.FCU_ALT_PUSH) 1 (&gt;H:A320_Neo_CDU_MODE_MANAGED_ALTITUDE)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button - AP1</label>
      <script>1 (K:A32NX.FCU_AP_1_PUSH) - (&gt;K:A32NX.FCU_AP_1_PUSH)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button - AP2</label>
      <script>1 (K:A32NX.FCU_AP_2_PUSH) - (&gt;K:A32NX.FCU_AP_2_PUSH)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button - Baro STD</label>
      <script>(L:XMLVAR_Baro1_ForcedToSTD, Number) ! (&gt;L:XMLVAR_Baro1_ForcedToSTD, Number) (L:XMLVAR_Baro1_ForcedToSTD, Number) 0 == if{ (A:KOHLSMAN SETTING MB:1, mbars) 16 * (&gt;L:XMLVAR_Baro1_SavedPressure) 1 (&gt;K:BAROMETRIC_STD_PRESSURE) 3 (&gt;L:XMLVAR_Baro1_Mode, Number) } els{ (L:XMLVAR_Baro1_SavedPressure) (&gt;K:KOHLSMAN_SET) 1 (&gt;L:XMLVAR_Baro1_Mode, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button - Brk Fan</label>
      <script>1 (L:A32NX_BRAKE_FAN_BTN_PRESSED, Number) - (&gt;L:A32NX_BRAKE_FAN_BTN_PRESSED, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button - CLR ECAM</label>
      <script>1 (&gt;L:A32NX_BTN_CLR, Number) (SLEEP:500) 0 (&gt;L:A32NX_BTN_CLR, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button - LS Info1</label>
      <script>1 (K:A32NX.FCU_BTN_LS_1, Number) - (&gt;K:A32NX.FCU_BTN_LS_1, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button - LS Info2</label>
      <script>1 (H:A320_Neo_PFD_BTN_LS_2, Number) - (&gt;H:A320_Neo_PFD_BTN_LS_2, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button - Pred Windshear</label>
      <script>1 (L:A32NX_SWITCH_RADAR_PWS_Position, Number) - (&gt;L:A32NX_SWITCH_RADAR_PWS_Position, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button - RMP Transfer</label>
      <script>1 (&gt;H:A32NX_RMP_L_TRANSFER_BUTTON_PRESSED, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button - Terr on ND1</label>
      <script>1 (H:A320_Neo_MFD_BTN_TERRONND_1, Number) - (&gt;H:A320_Neo_MFD_BTN_TERRONND_1, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button - Terr on ND2</label>
      <script>1 (H:A320_Neo_MFD_BTN_TERRONND_2, Number) - (&gt;H:A320_Neo_MFD_BTN_TERRONND_2, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button - TO Conf</label>
      <script>(L:A32NX_BTN_TOCONFIG, Number) 1 == if{ 0 (&gt;L:A32NX_BTN_TOCONFIG, Number) } els{ 1 (&gt;L:A32NX_BTN_TOCONFIG, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button - Trk/Fpa</label>
      <script>(L:A32NX_TRK_FPA_MODE_ACTIVE, bool) 1 == if{ 0 (&gt;L:A32NX_TRK_FPA_MODE_ACTIVE, Number) } els{ 1 (&gt;L:A32NX_TRK_FPA_MODE_ACTIVE, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - A. Ice Eng1</label>
      <script>(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed, Number) 1 == if{ 0 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed, Number) } els{ 1 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed, Number) } 1 (&gt;K:ANTI_ICE_TOGGLE_ENG1)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - A. Ice Eng2</label>
      <script>(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed, Number) 1 == if{ 0 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed, Number) } els{ 1 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed, Number) } 1 (&gt;K:ANTI_ICE_TOGGLE_ENG2)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - A. Ice Wing</label>
      <script>(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed, Number) 1 == if{ 0 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed, Number) } els{ 1 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed, Number) } 1 (&gt;K:TOGGLE_STRUCTURAL_DEICE)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - APU Bleed</label>
      <script>1 (L:A32NX_OVHD_PNEU_APU_BLEED_PB_IS_ON, Number) - (&gt;L:A32NX_OVHD_PNEU_APU_BLEED_PB_IS_ON, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - APU Master</label>
      <script>1 (L:A32NX_OVHD_APU_MASTER_SW_PB_IS_ON, Number) - (&gt;L:A32NX_OVHD_APU_MASTER_SW_PB_IS_ON, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - APU Start</label>
      <script>1 (L:A32NX_OVHD_APU_START_PB_IS_ON, Number) - (&gt;L:A32NX_OVHD_APU_START_PB_IS_ON, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - Bat1 OFF</label>
      <script>(L:A32NX_OVHD_ELEC_BAT_10_PB_IS_AUTO, Number) 1 == if{ 10 6 (&gt;K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 0 (&gt;L:A32NX_OVHD_ELEC_BAT_10_PB_IS_AUTO, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - Bat1 ON</label>
      <script>(L:A32NX_OVHD_ELEC_BAT_10_PB_IS_AUTO, Number) 0 == if{ 10 6 (&gt;K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 1 (&gt;L:A32NX_OVHD_ELEC_BAT_10_PB_IS_AUTO, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - Bat1 Toggle</label>
      <script>(L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO, Bool) if{ 0 (&gt;L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO, Bool) } els{ 1 (&gt;L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO, Bool) } </script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - Bat2 OFF</label>
      <script>(L:A32NX_OVHD_ELEC_BAT_11_PB_IS_AUTO, Number) 1 == if{ 11 6 (&gt;K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 0 (&gt;L:A32NX_OVHD_ELEC_BAT_11_PB_IS_AUTO, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - Bat2 ON</label>
      <script>(L:A32NX_OVHD_ELEC_BAT_11_PB_IS_AUTO, Number) 0 == if{ 11 6 (&gt;K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 1 (&gt;L:A32NX_OVHD_ELEC_BAT_11_PB_IS_AUTO, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - Bat2 Toggle</label>
      <script>(L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO, Bool) if{ 0 (&gt;L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO, Bool) } els{ 1 (&gt;L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO, Bool) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - Cabin Call</label>
      <script>1 (&gt;L:PUSH_OVHD_CALLS_ALL, Number) (SLEEP:500) 0 (&gt;L:PUSH_OVHD_CALLS_ALL, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - Crew Oxygen</label>
      <script>1 (L:PUSH_OVHD_OXYGEN_CREW, Number) - (&gt;L:PUSH_OVHD_OXYGEN_CREW, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - Emer Exit Arm</label>
      <script>(L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position, Number) 1 == if{ 2 (&gt;L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position, Number) } els{ 1 (&gt;L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - Ext Pwr</label>
      <script>(&gt;K:TOGGLE_EXTERNAL_POWER)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - F. Pump All</label>
      <script>1 (K:FUELSYSTEM_PUMP_TOGGLE) 0 == if{ 1 1 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } els{ 0 1 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } (A:FUELSYSTEM PUMP SWITCH:1, ENUM) 0 == if{ 1 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_PUMP1_Pressed, Number)) } els{ 0 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_PUMP1_Pressed, Number) } (SLEEP:50) 2 (K:FUELSYSTEM_PUMP_TOGGLE) 0 == if{ 1 2 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } els{ 0 2 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } (A:FUELSYSTEM PUMP SWITCH:2, ENUM) 0 == if{ 1 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LTKPUMPS1_Pressed, Number) } els{ 0 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LTKPUMPS1_Pressed, Number) } (SLEEP:50) 3 (K:FUELSYSTEM_PUMP_TOGGLE) 0 == if{ 1 3 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } els{ 0 3 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } (A:FUELSYSTEM PUMP SWITCH:3, ENUM) 0 == if{ 1 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_RTKPUMPS1_Pressed, Number) } els{ 0 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_RTKPUMPS1_Pressed, Number) } (SLEEP:50) 4 (K:FUELSYSTEM_PUMP_TOGGLE) 0 == if{ 1 4 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } els{ 0 4 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } (A:FUELSYSTEM PUMP SWITCH:4, ENUM) 0 == if{ 1 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_PUMP2_Pressed, Number)) } els{ 0 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_PUMP2_Pressed, Number) } (SLEEP:50) 5 (K:FUELSYSTEM_PUMP_TOGGLE) 0 == if{ 1 5 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } els{ 0 5 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } (A:FUELSYSTEM PUMP SWITCH:5, ENUM) 0 == if{ 1 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LTKPUMPS2_Pressed, Number) } els{ 0 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LTKPUMPS2_Pressed, Number) } (SLEEP:50) 6 (K:FUELSYSTEM_PUMP_TOGGLE) 0 == if{ 1 6 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } els{ 0 6 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } (A:FUELSYSTEM PUMP SWITCH:6, ENUM) 0 == if{ 1 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_RTKPUMPS2_Pressed, Number) } els{ 0 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_RTKPUMPS2_Pressed, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - F. Pump1</label>
      <script>1 (K:FUELSYSTEM_PUMP_TOGGLE) 0 == if{ 1 1 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } els{ 0 1 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } (A:FUELSYSTEM PUMP SWITCH:1, ENUM) 0 == if{ 1 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_PUMP1_Pressed, Number)) } els{ 0 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_PUMP1_Pressed, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - F. Pump2</label>
      <script>2 (K:FUELSYSTEM_PUMP_TOGGLE) 0 == if{ 1 2 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } els{ 0 2 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } (A:FUELSYSTEM PUMP SWITCH:2, ENUM) 0 == if{ 1 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LTKPUMPS1_Pressed, Number) } els{ 0 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LTKPUMPS1_Pressed, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - F. Pump3</label>
      <script>3 (K:FUELSYSTEM_PUMP_TOGGLE) 0 == if{ 1 3 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } els{ 0 3 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } (A:FUELSYSTEM PUMP SWITCH:3, ENUM) 0 == if{ 1 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_RTKPUMPS1_Pressed, Number) } els{ 0 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_RTKPUMPS1_Pressed, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - F. Pump4</label>
      <script>4 (K:FUELSYSTEM_PUMP_TOGGLE) 0 == if{ 1 4 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } els{ 0 4 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } (A:FUELSYSTEM PUMP SWITCH:4, ENUM) 0 == if{ 1 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_PUMP2_Pressed, Number)) } els{ 0 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_PUMP2_Pressed, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - F. Pump5</label>
      <script>5 (K:FUELSYSTEM_PUMP_TOGGLE) 0 == if{ 1 5 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } els{ 0 5 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } (A:FUELSYSTEM PUMP SWITCH:5, ENUM) 0 == if{ 1 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LTKPUMPS2_Pressed, Number) } els{ 0 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LTKPUMPS2_Pressed, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - F. Pump6</label>
      <script>6 (K:FUELSYSTEM_PUMP_TOGGLE) 0 == if{ 1 6 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } els{ 0 6 (&gt;K:FUELSYSTEM_PUMP_TOGGLE) } (A:FUELSYSTEM PUMP SWITCH:6, ENUM) 0 == if{ 1 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_RTKPUMPS2_Pressed, Number) } els{ 0 (&gt;L:XMLVAR_Momentary_PUSH_OVHD_FUEL_RTKPUMPS2_Pressed, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - No Smoking</label>
      <script>(L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position, Number) 1 == if{ 2 (&gt;L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position, Number) } els{ 1 (&gt;L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Button OVHD - Seatbelts</label>
      <script>1 (L:XMLVAR_SWITCH_OVHD_INTLT_SEATBELT_Position, Number) - (&gt;L:XMLVAR_SWITCH_OVHD_INTLT_SEATBELT_Position, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - HDG_PULL</label>
      <script>1 (K:A32NX.FCU_HDG_PULL) - (&gt;K:A32NX.FCU_HDG_PULL)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - HDG_PUSH</label>
      <script>1 (K:A32NX.FCU_HDG_PUSH) - (&gt;K:A32NX.FCU_HDG_PUSH)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - ADIRS1 Left</label>
      <script>(L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB, Number) 0 &gt; if{ (L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB, Number) 1 - (&gt;L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - ADIRS1 Right</label>
      <script>(L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB, Number) 2 &lt; if{ (L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB, Number) 1 + (&gt;L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - ADIRS2 Left</label>
      <script>(L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB, Number) 0 &gt; if{ (L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB, Number) 1 - (&gt;L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - ADIRS2 Right</label>
      <script>(L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB, Number) 2 &lt; if{ (L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB, Number) 1 + (&gt;L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - ADIRS3 Left</label>
      <script>(L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB, Number) 0 &gt; if{ (L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB, Number) 1 - (&gt;L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - ADIRS3 Right</label>
      <script>(L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB, Number) 2 &lt; if{ (L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB, Number) 1 + (&gt;L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - Kohlsmann Large Left</label>
      <script>(A:KOHLSMAN SETTING MB, Millibars) 1 - 16 * (&gt;K:KOHLSMAN_SET)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - Kohlsmann Large Right</label>
      <script>(A:KOHLSMAN SETTING MB, Millibars) 1 + 16 * (&gt;K:KOHLSMAN_SET)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - ND1 Mode Left</label>
      <script>(L:A320_Neo_MFD_NAV_MODE_1, Number) 0 &gt; if{ (L:A320_Neo_MFD_NAV_MODE_1, Number) 1 - (&gt;L:A320_Neo_MFD_NAV_MODE_1, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - ND1 Mode Right</label>
      <script>(L:A320_Neo_MFD_NAV_MODE_1, Number) 4 &lt; if{ (L:A320_Neo_MFD_NAV_MODE_1, Number) 1 + (&gt;L:A320_Neo_MFD_NAV_MODE_1, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - ND1 Range Left</label>
      <script>(L:A320_Neo_MFD_Range_1, Number) 0 &gt; if{ (L:A320_Neo_MFD_Range_1, Number) 1 - (&gt;L:A320_Neo_MFD_Range_1, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - ND1 Range Right</label>
      <script>(L:A320_Neo_MFD_Range_1, Number) 5 &lt; if{ (L:A320_Neo_MFD_Range_1, Number) 1 + (&gt;L:A320_Neo_MFD_Range_1, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - ND2 Mode Left</label>
      <script>(L:A320_Neo_MFD_NAV_MODE_2, Number) 0 &gt; if{ (L:A320_Neo_MFD_NAV_MODE_2, Number) 1 - (&gt;L:A320_Neo_MFD_NAV_MODE_2, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - ND2 Mode Right</label>
      <script>(L:A320_Neo_MFD_NAV_MODE_2, Number) 4 &lt; if{ (L:A320_Neo_MFD_NAV_MODE_2, Number) 1 + (&gt;L:A320_Neo_MFD_NAV_MODE_2, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - ND2 Range Left</label>
      <script>(L:A320_Neo_MFD_Range_2, Number) 0 &gt; if{ (L:A320_Neo_MFD_Range_2, Number) 1 - (&gt;L:A320_Neo_MFD_Range_2, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - ND2 Range Right</label>
      <script>(L:A320_Neo_MFD_Range_2, Number) 5 &lt; if{ (L:A320_Neo_MFD_Range_2, Number) 1 + (&gt;L:A320_Neo_MFD_Range_2, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - RMP Inner Left</label>
      <script>1 (&gt;H:A32NX_RMP_L_INNER_KNOB_TURNED_ANTICLOCKWISE, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - RMP Inner Right</label>
      <script>1 (&gt;H:A32NX_RMP_L_INNER_KNOB_TURNED_CLOCKWISE, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - RMP Outer Left</label>
      <script>1 (&gt;H:A32NX_RMP_L_OUTER_KNOB_TURNED_ANTICLOCKWISE, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - RMP Outer Right</label>
      <script>1 (&gt;H:A32NX_RMP_L_OUTER_KNOB_TURNED_CLOCKWISE, Number)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - TCAS Mode Left</label>
      <script>(L:A32NX_SWITCH_TCAS_Position, Number) 0 &gt; if{ (L:A32NX_SWITCH_TCAS_Position, Number) 1 - (&gt;L:A32NX_SWITCH_TCAS_Position, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - TCAS Mode Right</label>
      <script>(L:A32NX_SWITCH_TCAS_Position, Number) 2 &lt; if{ (L:A32NX_SWITCH_TCAS_Position, Number) 1 + (&gt;L:A32NX_SWITCH_TCAS_Position, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - TCAS Tr Pos Left</label>
      <script>(L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, Number) 0 &gt; if{ (L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, Number) 1 - (&gt;L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Knob - TCAS Tr Pos Right</label>
      <script>(L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, Number) 3 &lt; if{ (L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, Number) 1 + (&gt;L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, Number) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - A/Thrust</label>
      <script>(L:A32NX_AUTOTHRUST_STATUS, Number) 1 &gt;= if{ 1 (&gt;MIDI:3:NoteOn:1:11) } els{ 0 (&gt;MIDI:3:NoteOn:1:11) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - ALT Knob</label>
      <script>(L:A32NX_FMA_VERTICAL_MODE, Number) s1 l1 0 == if{ 0 (&gt;MIDI:3:CC:1:14) } l1 10 == if{ 27 (&gt;MIDI:3:CC:1:14) } l1 12 == if{ 22 (&gt;MIDI:3:CC:1:14) } l1 22 == if{ 22 (&gt;MIDI:3:CC:1:14) } l1 13 == if{ 18 (&gt;MIDI:3:CC:1:14) } l1 23 == if{ 18 (&gt;MIDI:3:CC:1:14) } l1 11 == if{ 28 (&gt;MIDI:3:CC:1:14) } l1 30 == if{ 28 (&gt;MIDI:3:CC:1:14) } l1 31 == if{ 27 (&gt;MIDI:3:CC:1:14) } l1 32 == if{ 27 (&gt;MIDI:3:CC:1:14) } l1 33 == if{ 28 (&gt;MIDI:3:CC:1:14) } l1 34 == if{ 27 (&gt;MIDI:3:CC:1:14) } l1 40 &gt;= if{ 28 (&gt;MIDI:3:CC:1:14) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - AP1 Active</label>
      <script>(L:A32NX_AUTOPILOT_1_ACTIVE, Number) 1 == if{ 1 (&gt;MIDI:3:NoteOn:1:2) } els{ 0 (&gt;MIDI:3:NoteOn:1:2) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - AP2 Active</label>
      <script>(L:A32NX_AUTOPILOT_2_ACTIVE, Number) 1 == if{ 1 (&gt;MIDI:3:NoteOn:1:3) } els{ 0 (&gt;MIDI:3:NoteOn:1:3) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - APPR Active</label>
      <script>(L:A32NX_FCU_APPR_MODE_ACTIVE, Number) 0 == if{ 0 (&gt;MIDI:3:NoteOn:1:6) } els{ 1 (&gt;MIDI:3:NoteOn:1:6) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - Baro Knob</label>
      <script>(A:KOHLSMAN SETTING STD, Bool) 1 == if{ 27 (&gt;MIDI:3:CC:1:9) } els{ 20 (&gt;MIDI:3:CC:1:9) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - Brake Fan</label>
      <script>(L:A32NX_BRAKE_FAN, Number) 10 * (L:A32NX_BRAKES_HOT, Number) + s1 l1 10 &gt;= if{ 1 (&gt;MIDI:3:NoteOn:1:1) } l1 1 == if{ 2 (&gt;MIDI:3:NoteOn:1:1) } l1 0 == if{ 0 (&gt;MIDI:3:NoteOn:1:1) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - EXPED</label>
      <script>(L:A32NX_FMA_EXPEDITE_MODE, Number) 1 == if{ 1 (&gt;MIDI:3:NoteOn:1:14) } els{ 0 (&gt;MIDI:3:NoteOn:1:14) } </script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - FD Active</label>
      <script>(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool) 0 == if{ 0 (&gt;MIDI:3:NoteOn:1:8) } els{ 1 (&gt;MIDI:3:NoteOn:1:8) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - FPA Active</label>
      <script>(L:A32NX_TRK_FPA_MODE_ACTIVE, bool) 1 == if{ 1 (&gt;MIDI:3:NoteOn:1:10) } els{ 0 (&gt;MIDI:3:NoteOn:1:10) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - Gear</label>
      <script>(A:GEAR TOTAL PCT EXTENDED, Percent) s1 l1 1 &gt;= if{ 1 (&gt;MIDI:3:NoteOn:1:12) } l1 0 == if{ 0 (&gt;MIDI:3:NoteOn:1:12) } l1 0 &gt; l1 1 &lt; and if{ 2 (&gt;MIDI:3:NoteOn:1:12) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - HDG Knob</label>
      <script>(L:A32NX_FMA_LATERAL_MODE, Number) s1 l1 0 == if{ 0 (&gt;MIDI:3:CC:1:13) } l1 10 == if{ 20 (&gt;MIDI:3:CC:1:13) } l1 11 == if{ 20 (&gt;MIDI:3:CC:1:13) } l1 20 == if{ 27 (&gt;MIDI:3:CC:1:13) } l1 30 == if{ 28 (&gt;MIDI:3:CC:1:13) } l1 31 == if{ 27 (&gt;MIDI:3:CC:1:13) } l1 32 == if{ 27 (&gt;MIDI:3:CC:1:13) } l1 33 == if{ 28 (&gt;MIDI:3:CC:1:13) } l1 34 == if{ 27 (&gt;MIDI:3:CC:1:13) } l1 40 == if{ 28 (&gt;MIDI:3:CC:1:13) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - LOC Active</label>
      <script>(L:A32NX_FCU_LOC_MODE_ACTIVE, Number) 0 == if{ 0 (&gt;MIDI:3:NoteOn:1:4) } els{ 1 (&gt;MIDI:3:NoteOn:1:4) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - LS Info 1 Active</label>
      <script>(L:BTN_LS_1_FILTER_ACTIVE, Bool) 1 == if{ 1 (&gt;MIDI:3:NoteOn:1:9) } els{ 0 (&gt;MIDI:3:NoteOn:1:9) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - Master Caution Active</label>
      <script>(L:Generic_Master_Caution_Active, Number) 0 == if{ 0 (&gt;MIDI:3:NoteOn:1:0) } els{ 2 (&gt;MIDI:3:NoteOn:1:0) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - ND1 Mode</label>
      <script>(L:A320_Neo_MFD_NAV_MODE_1, Number) 0 == if{ 3 (&gt;MIDI:3:CC:1:10) } (L:A320_Neo_MFD_NAV_MODE_1, Number) 1 == if{ 5 (&gt;MIDI:3:CC:1:10) } (L:A320_Neo_MFD_NAV_MODE_1, Number) 2 == if{ 7 (&gt;MIDI:3:CC:1:10) } (L:A320_Neo_MFD_NAV_MODE_1, Number) 3 == if{ 9 (&gt;MIDI:3:CC:1:10) } (L:A320_Neo_MFD_NAV_MODE_1, Number) 4 == if{ 11 (&gt;MIDI:3:CC:1:10) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - ND1 Range</label>
      <script>(L:A320_Neo_MFD_Range_1, Number) 0 == if{ 3 (&gt;MIDI:3:CC:1:11) } (L:A320_Neo_MFD_Range_1, Number) 1 == if{ 5 (&gt;MIDI:3:CC:1:11) } (L:A320_Neo_MFD_Range_1, Number) 2 == if{ 7 (&gt;MIDI:3:CC:1:11) } (L:A320_Neo_MFD_Range_1, Number) 3 == if{ 9 (&gt;MIDI:3:CC:1:11) } (L:A320_Neo_MFD_Range_1, Number) 4 == if{ 11 (&gt;MIDI:3:CC:1:11) } (L:A320_Neo_MFD_Range_1, Number) 5 == if{ 13 (&gt;MIDI:3:CC:1:11) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - Parking Brake</label>
      <script>(L:A32NX_PARK_BRAKE_LEVER_POS, Number) 0 == if{ 0 (&gt;MIDI:3:NoteOn:1:15) } els{ 2 (&gt;MIDI:3:NoteOn:1:15) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - SPD Knob</label>
      <script>(A:AUTOPILOT SPEED SLOT INDEX, Number) 2 == if{ 27 (&gt;MIDI:3:CC:1:12) } els{ 20 (&gt;MIDI:3:CC:1:12) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - Spoilers Armed</label>
      <script>(L:A32NX_SPOILERS_ARMED, Number) 1 == if{ 1 (&gt;MIDI:3:NoteOn:1:7) } els{ 0 (&gt;MIDI:3:NoteOn:1:7) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - LED - VS Knob</label>
      <script>(L:A32NX_FMA_VERTICAL_MODE, Number) s1 l1 0 == if{ 0 (&gt;MIDI:3:CC:1:15) } l1 10 == if{ 27 (&gt;MIDI:3:CC:1:15) } l1 14 == if{ 20 (&gt;MIDI:3:CC:1:15) } l1 15 == if{ 20 (&gt;MIDI:3:CC:1:15) } (L:A32NX_AUTOPILOT_VS_SELECTED, Number) 10 / s2 l2 0 &lt; if{ 18 (&gt;MIDI:3:CC:1:15) } l2 0 &gt; if{ 22 (&gt;MIDI:3:CC:1:15) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Light - Button - Dome</label>
      <script>(L:A320DomeVar, Number) - (&gt;L:A320DomeVar, Number) (L:A320DomeVar, Number) 0 == if{ 1 (&gt;K:0 - A320 Int Lights-A320 DOME off) } els{ 1 (&gt;K:0 - A320 Int Lights-A320 DOME brt) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Light - Knob - Displays All Left</label>
      <script>(A:LIGHT POTENTIOMETER:88, Percent) 5 - 10 max { 88 (&gt;K:2:LIGHT_POTENTIOMETER_SET) 89 (&gt;K:2:LIGHT_POTENTIOMETER_SET) 90 (&gt;K:2:LIGHT_POTENTIOMETER_SET) 91 (&gt;K:2:LIGHT_POTENTIOMETER_SET) 92 (&gt;K:2:LIGHT_POTENTIOMETER_SET) 93 (&gt;K:2:LIGHT_POTENTIOMETER_SET) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Light - Knob - Displays All Right</label>
      <script>(A:LIGHT POTENTIOMETER:89, Percent) 5 + 100 min { 89 (&gt;K:2:LIGHT_POTENTIOMETER_SET) 88 (&gt;K:2:LIGHT_POTENTIOMETER_SET) 90 (&gt;K:2:LIGHT_POTENTIOMETER_SET) 91 (&gt;K:2:LIGHT_POTENTIOMETER_SET) 92 (&gt;K:2:LIGHT_POTENTIOMETER_SET) 93 (&gt;K:2:LIGHT_POTENTIOMETER_SET) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Light - Knob - Integr All Left</label>
      <script>(A:LIGHT POTENTIOMETER:86, Percent) 10 - 0 max { 86 (&gt;K:2:LIGHT_POTENTIOMETER_SET) 85 (&gt;K:2:LIGHT_POTENTIOMETER_SET) 84 (&gt;K:2:LIGHT_POTENTIOMETER_SET) 87 (&gt;K:2:LIGHT_POTENTIOMETER_SET) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - Light - Knob - Integr All Right</label>
      <script>(A:LIGHT POTENTIOMETER:86, Percent) 10 + 100 min { 86 (&gt;K:2:LIGHT_POTENTIOMETER_SET) 85 (&gt;K:2:LIGHT_POTENTIOMETER_SET) 84 (&gt;K:2:LIGHT_POTENTIOMETER_SET) 87 (&gt;K:2:LIGHT_POTENTIOMETER_SET) }</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - MACH</label>
      <script>1 (K:A32NX.FCU_SPD_MACH_TOGGLE_PUSH ) - (&gt;K:A32NX.FCU_SPD_MACH_TOGGLE_PUSH )</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - SPEED_PULL</label>
      <script>1 (K:A32NX.FCU_SPD_PULL) - (&gt;K:A32NX.FCU_SPD_PULL)</script>
    </Script>
    <Script>
      <group>A32NX Exp 1.0</group>
      <label>A32NX - SPEED_PUSH</label>
      <script>1 (K:A32NX.FCU_SPD_PUSH) - (&gt;K:A32NX.FCU_SPD_PUSH)</script>
    </Script>
  </scripts>
</ScriptList>